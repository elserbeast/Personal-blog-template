---
import Main from "../layouts/MainLayout.astro";
---

<!-- 保证页面编码为UTF-8，防止中文乱码 -->
<meta charset="utf-8" />
<style>
  body {
    background: linear-gradient(135deg, #ffb7d5 0%, #ffe6f3 60%, #fff6fb 100%);
    padding-top: 2rem;
  }
  .card {
    border-radius: 10px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  .card-header {
    background: linear-gradient(135deg, #ffb7d5 0%, #ffe6f3 60%, #fff6fb 100%);
    border-radius: 10px 10px 0 0 !important;
  }
  .resume-title {
    color: black;
  }
  #resumeOutput {
    white-space: pre-wrap;
    background-color: #f8f9fa;
    border-radius: 5px;
    padding: 1.5rem;
    margin-top: 1rem;
    border: 1px solid #dee2e6;
  }
  #loadingSpinner {
    display: none;
  }
  #errorAlert {
    display: none;
  }
  .btn-generate {
    width: 100%;
    padding: 0.5rem;
    font-size: 1.1rem;
    color: black;
    background: linear-gradient(135deg, #ffb7d5 0%, #ffe6f3 60%, #fff6fb 100%);
  }
  
</style>

<!-- Bootstrap CSS & Icons -->
<link
  href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
  rel="stylesheet"
/>
<link
  rel="stylesheet"
  href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css"
/>

<Main
  title="智能简历生成系统"
  subTitle="使用AI技术生成专业简历"
  bannerImage="public/130、图片.png"
  slug="/jianli"
>
  <div class="container">
    <div class="row justify-content-center">
      <div class="col-lg-8">
        <div class="card shadow">
          <div class="card-header bg-primary text-white">
            <h2 class="mb-0 text-center resume-title">智能简历生成系统</h2>
          </div>
          <div class="card-body">
            <form id="resumeForm">
              <div class="mb-3">
                <label for="resumePrompt" class="form-label fw-bold"
                  >简历要求/提示词</label
                >
                <textarea
                  class="form-control"
                  id="resumePrompt"
                  rows="5"
                  required
                  placeholder="例如：生成一份前端开发工程师的简历，要求包含HTML、CSS、JavaScript、React等技术栈，3年工作经验"
                ></textarea>
                <div class="form-text">请详细描述您想要的简历内容</div>
              </div>
              <button
                type="submit"
                class="btn btn-primary btn-generate"
                id="generateBtn"
              >
                <span id="buttonText">生成简历</span>
                <span
                  id="loadingSpinner"
                  class="spinner-border spinner-border-sm ms-2"></span>
              </button>
            </form>

            <div class="alert alert-danger mt-3" id="errorAlert" role="alert">
            </div>

            <div class="mt-4" id="resultContainer" style="display: none;">
              <h4 class="mb-3">生成的简历内容</h4>
              <div id="resumeOutput"></div>
              <button class="btn btn-success w-100 mt-3" id="downloadBtn">
                <i class="bi bi-download me-2"></i>下载简历
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Main>

<!-- Bootstrap JS -->
<script
  src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"
></script>

<script>
  document.addEventListener("DOMContentLoaded", function () {
    const form = document.getElementById("resumeForm");
    const generateBtn = document.getElementById("generateBtn");
    const buttonText = document.getElementById("buttonText");
    const loadingSpinner = document.getElementById("loadingSpinner");
    const errorAlert = document.getElementById("errorAlert");
    const resultContainer = document.getElementById("resultContainer");
    const resumeOutput = document.getElementById("resumeOutput");
    const downloadBtn = document.getElementById("downloadBtn");

    form?.addEventListener("submit", async function (e) {
      e.preventDefault();

      // 重置状态
      if (errorAlert) errorAlert.style.display = "none";
      if (resultContainer) resultContainer.style.display = "none";

      // 获取输入
      const promptElem = document.getElementById("resumePrompt");
      const prompt =
        promptElem && promptElem instanceof HTMLTextAreaElement
          ? promptElem.value.trim()
          : "";
      if (!prompt) {
        showError("请输入简历生成要求");
        return;
      }

      // 显示加载状态
      if (generateBtn) (generateBtn as HTMLButtonElement).disabled = true;
      if (buttonText) buttonText.textContent = "生成中...";
      if (loadingSpinner) loadingSpinner.style.display = "inline-block";

      try {
        // 这里改为你的 Express 服务端口
        const response = await fetch(
          "http://localhost:3000/api/generate-resume",
          {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ question: prompt }),
          },
        );

        // 检查响应状态
        if (!response.ok) {
          const errorData = await response.json().catch(() => ({}));
          throw new Error(errorData.message || `请求失败: ${response.status}`);
        }

        // 解析JSON
        const data = await response.json();

        if (!data.success) {
          throw new Error(data.message || "生成简历失败");
        }

        // 显示结果
        if (resumeOutput) resumeOutput.textContent = data.data;
        if (resultContainer) resultContainer.style.display = "block";
      } catch (error) {
        console.error("Error:", error);
        showError(error instanceof Error ? error.message : String(error));
      } finally {
        // 重置按钮状态
        if (generateBtn) (generateBtn as HTMLButtonElement).disabled = false;
        if (buttonText) buttonText.textContent = "生成简历";
        if (loadingSpinner) loadingSpinner.style.display = "none";
      }
    });

    // 下载简历
    downloadBtn?.addEventListener("click", function () {
      const content = resumeOutput?.textContent;
      if (!content) return;

      // 用 TextEncoder 强制编码为 UTF-8 并加 BOM
      const encoder = new TextEncoder();
      const bom = new Uint8Array([0xef, 0xbb, 0xbf]);
      const encoded = encoder.encode(content);
      const blob = new Blob([bom, encoded], {
        type: "text/plain;charset=utf-8",
      });

      const url = URL.createObjectURL(blob);
      const a = document.createElement("a");
      a.href = url;
      a.download = `简历_${new Date().toISOString().slice(0, 10)}.txt`;
      document.body.appendChild(a);
      a.click();
      document.body.removeChild(a);
      URL.revokeObjectURL(url);
    });

    function showError(message: string) {
      if (errorAlert) {
        errorAlert.textContent = message;
        errorAlert.style.display = "block";
        errorAlert.scrollIntoView({ behavior: "smooth" });
      }
    }
  });
</script>
